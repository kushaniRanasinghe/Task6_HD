User
pipeline {
    agent any

    environment {
        // Define your environment variables here
        DEPLOY_ENV = 'production'
    }

    stages {
        stage('Build') {
            steps {
                  echo 'Building the project...'
                  bat 'powershell Compress-Archive -Path index.html, styles.css, script.js -DestinationPath BloomMartCart.zip'
            }
        }
        
        stage('Test') {
            steps {
                echo 'Running tests...'
                bat 'npm run test'
            }
        }

        stage('Code Quality Analysis') {
            steps {
                withSonarQubeEnv('sq1') {
                    bat 'C:\\Users\\ASUS\\SonarQube\\sonar-scanner-cli-5.0.1.3006-windows\\sonar-scanner-5.0.1.3006-windows\\bin\\sonar-scanner.bat -Dsonar.projectKey=jenkins_Project_SonarQube -Dsonar.sources=. -Dsonar.host.url=http://localhost:9000 -Dsonar.login=squ_84bf302632612e8db2938e3603da3f6b62c7f66b'
                }
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying to environment...'
                script {
                    try {
                        bat 'docker-compose down'  // Stop and remove existing containers
                    } catch (Exception e) {
                        echo 'No containers to stop.'
                    }
                    bat 'docker-compose up -d'  // Start new containers
                }
            }
        }
        
       stage('Release') {
            steps {
                echo 'Releasing the build...'
                script {
                    withCredentials([string(credentialsId: 'octopus-api-key', variable: 'OCTOPUS_API_KEY')]) {
                        withEnv(["OCTO_CMD=\"C:\\Program Files\\OctopusCLI\\octo.exe\" create-release --project \"Bloom Mart Cart\" --releaseNumber \"1.0.${env.BUILD_NUMBER}\" --deployTo \"Production\" --server \"https://bloom-mart-cart.octopus.app\" --apiKey ${env.OCTOPUS_API_KEY}"]) {
                            bat '%OCTO_CMD%'
                        }
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        
        failure {
            echo 'Pipeline failed.'
        }
    }
}
