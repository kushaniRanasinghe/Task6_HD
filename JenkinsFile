pipeline {
    agent any

    environment {
        // Define your environment variables here
        DEPLOY_ENV = 'production'
    }

    stages {
        stage('Build') {
            steps {
                  echo 'Building the project...'
                  bat 'powershell Compress-Archive -Path index.html, ConnectWithUs.html, Feedback.html, Supermarket.html, WhoAreWe.html, styles.css, cakeFilter.js, script.js, OpeningHours.js, flowerFilter.js, formValidation.js, loginPage.html, slideshow.js, superMarketFilter.js -DestinationPath BloomMartCart.zip'
            }
        }
        
        stage('Test') {
            steps {
                echo 'Running tests...'
                bat 'npm run test'
            }
        }

        stage('Code Quality Analysis') {
            steps {
                withSonarQubeEnv('sq1') {
                    bat 'C:\\Users\\ASUS\\SonarQube\\sonar-scanner-cli-5.0.1.3006-windows\\sonar-scanner-5.0.1.3006-windows\\bin\\sonar-scanner.bat -Dsonar.projectKey=jenkins_Project_SonarQube -Dsonar.sources=. -Dsonar.host.url=http://localhost:9000 -Dsonar.login=squ_84bf302632612e8db2938e3603da3f6b62c7f66b'
                }
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying to environment...'
                script {
                    try {
                        bat 'docker-compose down'  // Stop and remove existing containers
                    } catch (Exception e) {
                        echo 'No containers to stop.'
                    }
                    bat 'docker-compose up -d'  // Start new containers
                }
            }
        }
        
        stage('Release') {
            steps {
                script {
                    // Upload artifact to S3
                    bat 'aws s3 cp simple-shopping-cart.zip s3://your-bucket-name/${BUILD_NUMBER}/simple-shopping-cart.zip'
                    // Deploy using CodeDeploy
                    awsCodeDeploy(
                        applicationName: 'SimpleShoppingCartApp',
                        deploymentGroupName: 'SimpleShoppingCartDeploymentGroup',
                        deploymentConfig: 'CodeDeployDefault.OneAtATime',
                        region: 'us-east-1',
                        fileExistsBehavior: 'OVERWRITE',
                        s3Bucket: 'your-bucket-name',
                        s3Key: '${BUILD_NUMBER}/simple-shopping-cart.zip',
                        s3BundleType: 'zip'
                    )
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        
        failure {
            echo 'Pipeline failed.'
        }
    }
}
